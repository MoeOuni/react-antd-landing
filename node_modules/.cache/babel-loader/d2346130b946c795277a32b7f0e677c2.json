{"ast":null,"code":"/* eslint-disable func-names */\nimport requestAnimationFrame from 'raf';\nvar getTime = Date.now || function () {\n  return new Date().getTime();\n};\nvar sortObj = {\n  interval: 1,\n  timeout: 1,\n  TweenOneTicker: 2\n};\nvar tickObjToArray = function tickObjToArray(obj) {\n  return Object.keys(obj).map(function (k) {\n    return {\n      key: k,\n      func: obj[k]\n    };\n  }).sort(function (a, b) {\n    var aa = a.key.split('_')[0];\n    var bb = b.key.split('_')[0];\n    return sortObj[bb] - sortObj[aa];\n  });\n};\nvar Ticker = function Ticker() {};\nTicker.prototype = {\n  tickFnArray: [],\n  tickKeyObject: {},\n  id: -1,\n  tweenId: 0,\n  frame: 0,\n  perFrame: Math.round(1000 / 60),\n  elapsed: 0,\n  lastUpdate: getTime(),\n  startTime: getTime(),\n  // 开始时间，不计算 react 渲染时间；\n  nextTime: 0,\n  time: 0\n};\nvar p = Ticker.prototype;\np.add = function (fn) {\n  var key = 'TweenOneTicker_' + this.tweenId;\n  this.tweenId++;\n  this.wake(key, fn);\n  return key;\n};\np.wake = function (key, fn) {\n  this.tickKeyObject[key] = fn;\n  this.tickFnArray = tickObjToArray(this.tickKeyObject);\n  if (this.id === -1) {\n    this.id = requestAnimationFrame(this.tick);\n  }\n};\np.clear = function (key) {\n  delete this.tickKeyObject[key];\n  this.tickFnArray = tickObjToArray(this.tickKeyObject);\n};\np.sleep = function () {\n  requestAnimationFrame.cancel(this.id);\n  this.id = -1;\n  this.frame = 0;\n};\nvar ticker = new Ticker();\np.tick = function (a) {\n  ticker.elapsed = getTime() - ticker.lastUpdate;\n  // 离开当前时设值 300；大于 300 则为离开。\n  if (ticker.elapsed > 300) {\n    ticker.startTime += ticker.elapsed - ticker.perFrame;\n  }\n  ticker.lastUpdate += ticker.elapsed;\n  ticker.time = ticker.lastUpdate - ticker.startTime;\n  var overlap = ticker.time - ticker.nextTime;\n  if (overlap > 0 || !ticker.frame) {\n    ticker.frame++;\n    ticker.nextTime += overlap;\n  }\n  // console.log(ticker.frame, ticker.nextTime, ticker.time)\n  ticker.tickFnArray.forEach(function (item) {\n    return item.func(a);\n  });\n  // 如果 object 里没对象了，自动杀掉；\n  if (!ticker.tickFnArray.length) {\n    ticker.sleep();\n    return;\n  }\n  ticker.id = requestAnimationFrame(ticker.tick);\n};\nvar timeoutIdNumber = 0;\np.timeout = function (fn, time) {\n  var _this = this;\n  if (!(typeof fn === 'function')) {\n    return console.warn('not function'); // eslint-disable-line\n  }\n\n  var timeoutID = 'timeout_' + Date.now() + '-' + timeoutIdNumber;\n  var startTime = this.time;\n  this.wake(timeoutID, function () {\n    var moment = _this.time - startTime;\n    if (moment >= (time || 0)) {\n      _this.clear(timeoutID);\n      fn();\n    }\n  });\n  timeoutIdNumber++;\n  return timeoutID;\n};\nvar intervalIdNumber = 0;\np.interval = function (fn, time) {\n  var _this2 = this;\n  if (!(typeof fn === 'function')) {\n    console.warn('not function'); // eslint-disable-line\n    return null;\n  }\n  var intervalID = 'interval_' + Date.now() + '-' + intervalIdNumber;\n  var starTime = this.time;\n  this.wake(intervalID, function () {\n    var moment = _this2.time - starTime;\n    if (moment >= (time || 0)) {\n      starTime = _this2.time;\n      fn();\n    }\n  });\n  intervalIdNumber++;\n  return intervalID;\n};\nexport default ticker;","map":null,"metadata":{},"sourceType":"module"}